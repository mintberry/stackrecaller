using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Windows.Forms;

namespace Prototype
{
	public partial class TransitionDOIDialog : Form
	{
		TransitionMap map;
        FocusArea focusArea;

        public FocusArea FocusArea
        {
            get { return focusArea; }
            set { focusArea = value; }
        }
		
		public TransitionMap Map
		{
			get { return map; }
			set { map = value; }
		}
		
		public TransitionDOIDialog(TransitionMap map)
		{
			InitializeComponent();
			
			this.map = map;
            this.ClientSize = new Size(map.Size, map.Size);
		}
		
		protected override void OnPaint(PaintEventArgs e)
		{
			Graphics g = e.Graphics;
            //g.Clear(Color.Yellow);
            Bitmap b = new Bitmap(map.Size, map.Size, PixelFormat.Format32bppArgb);
            BitmapData bitmapData = b.LockBits(new Rectangle(0, 0, map.Size, map.Size), ImageLockMode.ReadOnly, PixelFormat.Format32bppArgb);

            unsafe
            {
                byte* buffer = (byte*) bitmapData.Scan0.ToPointer();

                for (int y = 0; y < map.Size; y++)
                {
                    for (int x = 0; x < map.Size; x++)
                    {
                        buffer[0] = (byte)(((float)map[x, y] / map.Max) * 255);
                        buffer[1] = (byte)(((float)map[x, y] / map.Max) * 255);
                        buffer[2] = (byte)(((float)map[x, y] / map.Max) * 255);
                        buffer[3] = 255;
                        buffer += 4;
                    }
                    buffer += bitmapData.Stride - bitmapData.Width * 4;
                }
            }
      
            b.UnlockBits(bitmapData);
            
			g.DrawImage(b, new Rectangle(0,0,map.Size,map.Size));

            if (focusArea != null)
                g.DrawLine(Pens.Orange, focusArea.Center, 0, focusArea.Center, map.Size);

			base.OnPaint(e);
		}

        private void timer1_Tick(object sender, EventArgs e)
        {
            this.Refresh();
        }

        private void TransitionDOIDialog_MouseClick(object sender, MouseEventArgs e)
        {
            map.IncrementCircle(e.X, e.Y, 10);
        }
	}
}
